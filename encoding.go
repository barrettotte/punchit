package punchit

// IBM 029 encoding map tranposed as "12-bit binary string"
// 1 = punch, 0 = no punch  (high bit => top ; low bit => bottom)
var ibm029 = map[string]string{
	"&":  "100000000000",
	"-":  "010000000000",
	"0":  "001000000000",
	"1":  "000100000000",
	"2":  "000010000000",
	"3":  "000001000000",
	"4":  "000000100000",
	"5":  "000000010000",
	"6":  "000000001000",
	"7":  "000000000100",
	"8":  "000000000010",
	"9":  "000000000001",
	"A":  "100100000000",
	"B":  "100010000000",
	"C":  "100001000000",
	"D":  "100000100000",
	"E":  "100000010000",
	"F":  "100000001000",
	"G":  "100000000100",
	"H":  "100000000010",
	"I":  "100000000001",
	"J":  "010100000000",
	"K":  "010010000000",
	"L":  "010001000000",
	"M":  "010000100000",
	"N":  "010000010000",
	"O":  "010000001000",
	"P":  "010000000100",
	"Q":  "010000000010",
	"R":  "010000000001",
	"/":  "001100000000",
	"S":  "001010000000",
	"T":  "001001000000",
	"U":  "001000100000",
	"V":  "001000010000",
	"W":  "001000001000",
	"X":  "001000000100",
	"Y":  "001000000010",
	"Z":  "001000000001",
	":":  "000010000010",
	"#":  "000001000010",
	"@":  "000000100010",
	"'":  "000000010010",
	"=":  "000000001010",
	"\"": "000000000110",
	"¢":  "100010000010",
	".":  "100001000010",
	"<":  "100000100010",
	"(":  "100000010010",
	"+":  "100000001010",
	"|":  "100000000110",
	"!":  "010010000010",
	"$":  "010001000010",
	"*":  "010000100010",
	")":  "010000010010",
	";":  "010000001010",
	"¬":  "010000000110",
	" ":  "000000000000",
	",":  "001001000010",
	"%":  "001000100010",
	"_":  "001000010010",
	">":  "001000001010",
	"?":  "001000000110",
}
